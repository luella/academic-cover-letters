""""
Need to read file from the input source : cover_letter.tex , school.csv
cover_letter.tex : the format of your cover letter. Variables in the cover letter are %(Address), %(Position), %(Department), %(School), %(Materials), %(References) 
school_details.csv : it contains the details you want to add for the given variables in the apt column
Find and replace the right variables
Create PDF with CoverLetter-SchoolName.pdf
Run from command line using python gencovletter.py cover_letter.tex school_details.csv
References: 
adapted for search and replace: https://github.com/kirankoduru/gen-cover-letter
adapted to turn tex into pdf: https://stackoverflow.com/questions/8085520/generating-pdf-latex-with-python-scrip
adapted to delete extra files: https://stackoverflow.com/questions/2081139/os-unlink-multiple-file-in-python
"""

from sys import argv # read in arguments called along with this script
import csv # read csv file
import subprocess # run pdflatex
import os # to clean up files
import glob # to clean up files


def write_cover_letter(cover_letter, school_details):

    # open csv file and read input
    with open(school_details) as details_csv:

        reader = csv.reader(details_csv)

        for r, row in enumerate(reader):


            #ignore the header row
            if r == 0:
                pass

            else:
                model_cover_letter = open('cover_letter.tex', 'r')

                # check and replace each line in the model cover letter
                for line in model_cover_letter:

                    line = line.replace('%(Address)', row[0])
                    line = line.replace('%(Position)', row[1])  
                    line = line.replace('%(Department)', row[2])  
                    line = line.replace('%(School)', row[3])
                    line = line.replace('%(Materials)', row[4])
                    line = line.replace('%(References)', row[5])

                    # create school-specific latex files 
                    cover_name = 'cover_letters/CoverLetter-' + row[3]
                    with open(cover_name + '.tex', 'a') as f:
                        f.write(line)

                # create pdf from latex
                cmd = ['pdflatex', '-interaction', 'nonstopmode', cover_name + '.tex']
                proc = subprocess.Popen(cmd)
                proc.communicate()


    

if __name__ == "__main__": # checks if code is being run directly: if yes, then run and pass in arguments. Else, just import functions

    coverletter = argv[1]
    schooldetails= argv[2]

    # just use the right file names or modify the ones provided
    write_cover_letter(coverletter, schooldetails)

    # delete other files generated by pdflatex
    for i in glob.glob(u'*.aux'):
        os.unlink (i)

    for i in glob.glob(u'*.log'):
        os.unlink (i)

    for i in glob.glob(u'*.out'):
        os.unlink (i)


